name: linux

on: 
  push:            # run on push events
    paths-ignore:  # but ignore everything in the docs subfolder 
      - 'docs/**'
    branches:
      - '**'
    tags:
      - '*'
  pull_request:    # run on pull requests
    paths-ignore:  # but ignore everything in the docs subfolder 
      - 'docs/**'
  schedule:
    - cron:  '25 1 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # Allow all other matrix-jobs to continue running, even if one of the jobs fails
      fail-fast: false
      matrix:
        build_type: [full, minimal]
        compiler: [gcc, clang]

    steps:
    - name: Cloning SUMO
      uses: actions/checkout@v2
      with:
        path: sumo
        fetch-depth: 0
 
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Fetching SUMO tags
      run: |
        cd sumo
        git fetch --tags --force

    - name: Preparing Build System
      run: |
        sudo apt-get update
        sudo apt-get install cmake libeigen3-dev libxerces-c-dev libfox-1.6-dev libgdal-dev libproj-dev libgtest-dev libgoogle-perftools-dev libgl2ps-dev python3-dev python3-setuptools swig openjdk-8-jdk maven ccache
        sudo pip3 install texttest

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1

    - name: Preparing Gtest
      run: |
        pushd /usr/src/gtest
        sudo mkdir build
        cd build
        if [[ "${{ matrix.compiler }}" == "gcc" ]]; then sudo CC=gcc CXX=g++ cmake ..; fi
        if [[ "${{ matrix.compiler }}" == "clang" ]]; then sudo CC=clang CXX=clang++ cmake ..; fi
        sudo make
        find . -name 'libgtest*' | xargs sudo cp --target-dir /usr/lib/

    - name: Building SUMO
      run: |
        mkdir -p sumo/cmake-build 
        cd sumo/cmake-build 
        if [[ "${{ matrix.compiler }}" == "gcc" ]]; then export CC=gcc; export CXX=g++; fi
        if [[ "${{ matrix.compiler }}" == "clang" ]]; then export CC=clang; export CXX=clang++; fi
        if [[ "${{ matrix.build_type }}" == "full" ]]; then cmake -DFMI=ON ..; fi
        if [[ "${{ matrix.build_type }}" == "minimal" ]]; then cmake -DFOX_CONFIG= -DPROJ_LIBRARY= -DCHECK_OPTIONAL_LIBS=OFF ..; fi 
        make -j4

    - name: Building Traas
      run: |
        cd sumo/cmake-build 
        make traas

    - name: Installing SUMO
      run: |
        cd sumo/cmake-build 
        sudo make install

    - name: Building Examples and Tests
      if: matrix.build_type == 'full'
      run: |
        sudo apt-get install python3-pyproj python3-rtree python3-pandas python3-flake8 python3-autopep8
        sudo pip3 install ezdxf fmpy[complete] pulp
        cd sumo/cmake-build
        make CTEST_OUTPUT_ON_FAILURE=1 examples test

    - name: Uploading artifacts (SUMO binaries)
      uses: actions/upload-artifact@v1
      with:
        name: Linux-${{ matrix.compiler }}-${{ matrix.build_type }}
        path: sumo/bin

    - name: Uploading FMI 2.0 FMU artifacts
      if: matrix.build_type == 'full'
      uses: actions/upload-artifact@v1
      with:
        name: sumo-fmi2-linux64
        path: sumo/bin/sumo-fmi2-linux64.fmu 
